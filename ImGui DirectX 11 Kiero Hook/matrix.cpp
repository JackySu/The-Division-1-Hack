#include "matrix.h"
#include "utility.h"
#include <math.h>

mat4 mat4_add(mat4 m1, mat4 m2)
{
	mat4 r;

	r._11 = m1._11 + m2._11;
	r._12 = m1._12 + m2._12;
	r._13 = m1._13 + m2._13;
	r._14 = m1._14 + m2._14;

	r._21 = m1._21 + m2._21;
	r._22 = m1._22 + m2._22;
	r._23 = m1._23 + m2._23;
	r._24 = m1._24 + m2._24;

	r._31 = m1._31 + m2._31;
	r._32 = m1._32 + m2._32;
	r._33 = m1._33 + m2._33;
	r._34 = m1._34 + m2._34;

	r._41 = m1._41 + m2._41;
	r._42 = m1._42 + m2._42;
	r._43 = m1._43 + m2._43;
	r._44 = m1._44 + m2._44;

	return r;
}

float mat4_det(mat4 m1)
{
	return
		m1._11 * m1._22 * m1._33
		+ m1._21 * m1._32 * m1._13
		+ m1._31 * m1._12 * m1._23
		- m1._11 * m1._32 * m1._23
		- m1._31 * m1._22 * m1._13
		- m1._21 * m1._12 * m1._33;
}

mat4 mat4_identity()
{
	mat4 r =
	{
		1.0f, 0.0f, 0.0f, 0.0f,
		0.0f, 1.0f, 0.0f, 0.0f,
		0.0f, 0.0f, 1.0f, 0.0f,
		0.0f, 0.0f, 0.0f, 1.0f
	};

	return r;
}

mat4 mat4_inverse(mat4 m1)
{
	mat4 r;
	float k;

	k = 1.0f /
		(m1._11 * m1._22 * m1._33
			+ m1._21 * m1._32 * m1._13
			+ m1._31 * m1._12 * m1._23
			- m1._11 * m1._32 * m1._23
			- m1._31 * m1._22 * m1._13
			- m1._21 * m1._12 * m1._33);

	r._11 =
		(m1._22 * m1._33 * m1._44
			+ m1._23 * m1._34 * m1._42
			+ m1._24 * m1._32 * m1._43
			- m1._22 * m1._34 * m1._43
			- m1._23 * m1._32 * m1._44
			- m1._24 * m1._33 * m1._42) * k;

	r._12 =
		(m1._12 * m1._34 * m1._43
			+ m1._13 * m1._32 * m1._44
			+ m1._14 * m1._33 * m1._42
			- m1._12 * m1._33 * m1._44
			- m1._13 * m1._34 * m1._42
			- m1._14 * m1._32 * m1._43) * k;

	r._13 =
		(m1._12 * m1._23 * m1._44
			+ m1._13 * m1._24 * m1._42
			+ m1._14 * m1._22 * m1._43
			- m1._12 * m1._24 * m1._43
			- m1._13 * m1._22 * m1._44
			- m1._14 * m1._23 * m1._42) * k;

	r._14 =
		(m1._12 * m1._24 * m1._33
			+ m1._13 * m1._22 * m1._34
			+ m1._14 * m1._23 * m1._32
			- m1._12 * m1._23 * m1._34
			- m1._13 * m1._24 * m1._32
			- m1._14 * m1._22 * m1._33) * k;

	r._21 =
		(m1._21 * m1._34 * m1._43
			+ m1._23 * m1._31 * m1._44
			+ m1._24 * m1._33 * m1._41
			- m1._21 * m1._33 * m1._44
			- m1._23 * m1._34 * m1._41
			- m1._24 * m1._31 * m1._43) * k;

	r._22 =
		(m1._11 * m1._33 * m1._44
			+ m1._13 * m1._34 * m1._41
			+ m1._14 * m1._31 * m1._43
			- m1._11 * m1._34 * m1._43
			- m1._13 * m1._31 * m1._44
			- m1._14 * m1._33 * m1._41) * k;

	r._23 =
		(m1._11 * m1._24 * m1._43
			+ m1._13 * m1._21 * m1._44
			+ m1._14 * m1._23 * m1._41
			- m1._11 * m1._23 * m1._44
			- m1._13 * m1._24 * m1._41
			- m1._14 * m1._21 * m1._43) * k;

	r._24 =
		(m1._11 * m1._23 * m1._34
			+ m1._13 * m1._24 * m1._31
			+ m1._14 * m1._21 * m1._33
			- m1._11 * m1._24 * m1._33
			- m1._13 * m1._21 * m1._34
			- m1._14 * m1._23 * m1._31) * k;

	r._31 =
		(m1._21 * m1._32 * m1._44
			+ m1._22 * m1._34 * m1._41
			+ m1._24 * m1._31 * m1._42
			- m1._21 * m1._34 * m1._42
			- m1._22 * m1._31 * m1._44
			- m1._24 * m1._32 * m1._41) * k;

	r._32 =
		(m1._11 * m1._34 * m1._42
			+ m1._12 * m1._31 * m1._44
			+ m1._14 * m1._32 * m1._41
			- m1._11 * m1._32 * m1._44
			- m1._12 * m1._34 * m1._41
			- m1._14 * m1._31 * m1._42) * k;

	r._33 =
		(m1._11 * m1._22 * m1._44
			+ m1._12 * m1._24 * m1._41
			+ m1._14 * m1._21 * m1._42
			- m1._11 * m1._24 * m1._42
			- m1._12 * m1._21 * m1._44
			- m1._14 * m1._22 * m1._41) * k;

	r._34 =
		(m1._11 * m1._24 * m1._32
			+ m1._12 * m1._21 * m1._34
			+ m1._14 * m1._22 * m1._31
			- m1._11 * m1._22 * m1._34
			- m1._12 * m1._24 * m1._31
			- m1._14 * m1._21 * m1._32) * k;

	r._41 =
		(m1._21 * m1._33 * m1._42
			+ m1._22 * m1._31 * m1._43
			+ m1._23 * m1._32 * m1._41
			- m1._21 * m1._32 * m1._43
			- m1._22 * m1._33 * m1._41
			- m1._23 * m1._31 * m1._42) * k;

	r._42 =
		(m1._11 * m1._32 * m1._43
			+ m1._12 * m1._33 * m1._41
			+ m1._13 * m1._31 * m1._42
			- m1._11 * m1._33 * m1._42
			- m1._12 * m1._31 * m1._43
			- m1._13 * m1._32 * m1._41) * k;

	r._43 =
		(m1._11 * m1._23 * m1._42
			+ m1._12 * m1._21 * m1._43
			+ m1._13 * m1._22 * m1._41
			- m1._11 * m1._22 * m1._43
			- m1._12 * m1._23 * m1._41
			- m1._13 * m1._21 * m1._42) * k;

	r._44 =
		(m1._11 * m1._22 * m1._33
			+ m1._12 * m1._23 * m1._31
			+ m1._13 * m1._21 * m1._32
			- m1._11 * m1._23 * m1._32
			- m1._12 * m1._21 * m1._33
			- m1._13 * m1._22 * m1._31) * k;

	return r;
}

mat4 mat4_mul(mat4 m1, mat4 m2)
{
	mat4 r;

	r._11 =
		(m1._11 * m2._11) + (m1._12 * m2._21)
		+ (m1._13 * m2._31) + (m1._14 * m2._41);

	r._12 =
		(m1._11 * m2._12) + (m1._12 * m2._22)
		+ (m1._13 * m2._32) + (m1._14 * m2._42);

	r._13 =
		(m1._11 * m2._13) + (m1._12 * m2._23)
		+ (m1._13 * m2._33) + (m1._14 * m2._43);

	r._14 =
		(m1._11 * m2._14) + (m1._12 * m2._24)
		+ (m1._13 * m2._34) + (m1._14 * m2._44);

	r._21 =
		(m1._21 * m2._11) + (m1._22 * m2._21)
		+ (m1._23 * m2._31) + (m1._24 * m2._41);

	r._22 =
		(m1._21 * m2._12) + (m1._22 * m2._22)
		+ (m1._23 * m2._32) + (m1._24 * m2._42);

	r._23 =
		(m1._21 * m2._13) + (m1._22 * m2._23)
		+ (m1._23 * m2._33) + (m1._24 * m2._43);

	r._24 =
		(m1._21 * m2._14) + (m1._22 * m2._24)
		+ (m1._23 * m2._34) + (m1._24 * m2._44);

	r._31 =
		(m1._31 * m2._11) + (m1._32 * m2._21)
		+ (m1._33 * m2._31) + (m1._34 * m2._41);

	r._32 =
		(m1._31 * m2._12) + (m1._32 * m2._22)
		+ (m1._33 * m2._32) + (m1._34 * m2._42);

	r._33 =
		(m1._31 * m2._13) + (m1._32 * m2._23)
		+ (m1._33 * m2._33) + (m1._34 * m2._43);

	r._34 =
		(m1._31 * m2._14) + (m1._32 * m2._24)
		+ (m1._33 * m2._34) + (m1._34 * m2._44);

	r._41 =
		(m1._41 * m2._11) + (m1._42 * m2._21)
		+ (m1._43 * m2._31) + (m1._44 * m2._41);

	r._42 =
		(m1._41 * m2._12) + (m1._42 * m2._22)
		+ (m1._43 * m2._32) + (m1._44 * m2._42);

	r._43 =
		(m1._41 * m2._13) + (m1._42 * m2._23)
		+ (m1._43 * m2._33) + (m1._44 * m2._43);

	r._44 =
		(m1._41 * m2._14) + (m1._42 * m2._24)
		+ (m1._43 * m2._34) + (m1._44 * m2._44);

	return r;
}

mat4 mat4_perspective_fov(float fov_y, float aspect, float z_near, float z_far)
{
	mat4 r;

	float y_scale = (float)tan(M_PI_2 - fov_y / 2.0);

	r._11 = y_scale / aspect;
	r._12 = 0.0f;
	r._13 = 0.0f;
	r._14 = 0.0f;

	r._21 = 0.0f;
	r._22 = y_scale;
	r._23 = 0.0f;
	r._24 = 0.0f;

	r._31 = 0.0f;
	r._32 = 0.0f;
	r._33 = z_far / (z_far - z_near);
	r._34 = 1.0f;

	r._41 = 0.0f;
	r._42 = 0.0f;
	r._43 = -1.0f * z_near * z_far / (z_far - z_near);
	r._44 = 0.0f;

	return r;
}

mat4 mat4_scale(mat4 m1, float k)
{
	mat4 r;

	r._11 = m1._11 * k;
	r._12 = m1._12 * k;
	r._13 = m1._13 * k;
	r._14 = m1._14 * k;

	r._21 = m1._21 * k;
	r._22 = m1._22 * k;
	r._23 = m1._23 * k;
	r._24 = m1._24 * k;

	r._31 = m1._31 * k;
	r._32 = m1._32 * k;
	r._33 = m1._33 * k;
	r._34 = m1._34 * k;

	r._41 = m1._41 * k;
	r._42 = m1._42 * k;
	r._43 = m1._43 * k;
	r._44 = m1._44 * k;

	return r;
}

mat4 mat4_sub(mat4 m1, mat4 m2)
{
	mat4 r;

	r._11 = m1._11 - m2._11;
	r._12 = m1._12 - m2._12;
	r._13 = m1._13 - m2._13;
	r._14 = m1._14 - m2._14;

	r._21 = m1._21 - m2._21;
	r._22 = m1._22 - m2._22;
	r._23 = m1._23 - m2._23;
	r._24 = m1._24 - m2._24;

	r._31 = m1._31 - m2._31;
	r._32 = m1._32 - m2._32;
	r._33 = m1._33 - m2._33;
	r._34 = m1._34 - m2._34;

	r._41 = m1._41 - m2._41;
	r._42 = m1._42 - m2._42;
	r._43 = m1._43 - m2._43;
	r._44 = m1._44 - m2._44;

	return r;
}

mat4 mat4_transpose(mat4 m1)
{
	mat4 r;

	r._11 = m1._11;
	r._12 = m1._21;
	r._13 = m1._31;
	r._14 = m1._41;

	r._21 = m1._12;
	r._22 = m1._22;
	r._23 = m1._32;
	r._24 = m1._42;

	r._31 = m1._13;
	r._32 = m1._23;
	r._33 = m1._33;
	r._34 = m1._43;

	r._41 = m1._14;
	r._42 = m1._24;
	r._43 = m1._34;
	r._44 = m1._44;

	return r;
}

mat4 mat4_zero()
{
	mat4 r =
	{
		0.0f, 0.0f, 0.0f, 0.0f,
		0.0f, 0.0f, 0.0f, 0.0f,
		0.0f, 0.0f, 0.0f, 0.0f,
		0.0f, 0.0f, 0.0f, 0.0f
	};

	return r;
}